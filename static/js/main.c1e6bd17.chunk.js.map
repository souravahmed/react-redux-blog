{"version":3,"sources":["assets/fake_icon.png","services/config.js","services/UserService.js","redux/user/userActionTypes.js","redux/user/userActions.js","redux/post/postActionTypes.js","redux/post/postFetchActions.js","redux/post/postCreateActions.js","redux/post/postEditActions.js","services/PostService.js","redux/post/postActions.js","services/CommentService.js","redux/comment/commentActionTypes.js","redux/comment/commentActions.js","components/Loader.jsx","components/LinkButton.jsx","pages/User/View.jsx","uitils/PostSchemaUtils.js","uitils/MessageTypeUtils.js","components/AlertMessage.jsx","pages/Post/AddEditPost.jsx","pages/Home/HomePage.jsx","uitils/DataTableUtils.js","components/SearchBox.jsx","components/DataTable.jsx","pages/User/Index.jsx","components/LiveSearchDropDown.jsx","components/ConfirmModal.jsx","pages/Post/Index.jsx","redux/post/postDeleteActions.js","parts/Comment/Index.jsx","pages/Post/View.jsx","parts/Header/Header.jsx","parts/Footer/Footer.jsx","App.js","redux/user/userReducer.js","redux/post/postReducer.js","redux/comment/commentReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["instance","Axios","create","baseURL","headers","UserService","getAllUser","a","axios","get","data","getUser","userId","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","fetchUsersSuccess","type","payload","fetchUserSuccess","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","FETCH_POSTS_BY_USER_ID_REQUEST","FETCH_POSTS_BY_USER_ID_SUCCESS","FETCH_POSTS_BY_USER_ID_FAILURE","FETCH_POST_USERS_REQUEST","FETCH_POST_USERS_SUCCESS","FETCH_POST_USERS_FAILURE","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","fetchPostsSuccess","fetchPostSuccess","fetchPostsByUserIdSuccess","fetchPostUsersSuccess","createPostSuccess","updatePostSuccess","PostService","getAllPost","getAllPostByQuery","query","getPost","postId","getUsers","createPost","postData","post","JSON","stringify","updatePost","put","deletePost","delete","fetchPost","dispatch","console","log","error","fetchPostUsers","CommentService","getCommentsByPostId","FETCH_COMMENTS_BY_POST_ID_REQUEST","FETCH_COMMENTS_BY_POST_ID_SUCCESS","FETCH_COMMENTS_BY_POST_ID_FAILURE","fetchCommentsByPostIdSuccess","Loader","className","role","style","height","width","LinkButton","path","btnClasses","text","iconClass","to","View","useParams","state","useSelector","user","useDispatch","useEffect","message","fetchUser","loading","name","email","phone","address","suite","street","city","website","company","PostSchemaUtils","yup","shape","title","required","body","label","value","MessageTypeUtils","SUCCESS","FAILED","AlertMessage","messageType","alertClasses","MessageType","data-bs-dismiss","aria-label","AddEditPost","postState","useForm","resolver","yupResolver","postSchema","register","handleSubmit","control","reset","formState","isSubmitSuccessful","errors","undefined","Promise","all","users","selectedUserOption","filter","id","option","map","options","unshift","onSubmit","e","target","placeholder","render","field","HomePage","rel","href","DataTableInstance","showActionColumn","entityKeys","entities","actions","actionHandaler","func","actionClasses","actionType","this","VIEW_ACTION","EDIT_ACTION","DELETE_ACTION","SearchBox","props","aria-describedby","onChange","handleSearch","DataTable","table","location","useLocation","header","index","eachData","property","action","data-bs-toggle","data-bs-target","table-data","onClick","aria-hidden","pathname","Index","useState","setQuery","toLowerCase","includes","push","length","LiveSearchDropDown","selectedValue","ConfirmModal","modalTitle","leftButtonText","rightButtonText","confirmCallBackFun","tabIndex","aria-labelledby","PostPage","searchQuery","setSearchQuery","selecteUserId","setSelecteUserId","filterByUserQuery","setFilterByUserQuery","deletedPostId","setDeletedPostId","posts","attributes","obj","comment","fetchCommentsByPostId","commentsByPostId","showComment","setShowComment","showButtonText","setShowButtonText","preventDefault","src","fake_icon","alt","activeClassName","exact","children","Footer","App","Header","initialState","postCreatedResponse","rootReducer","combineReducers","postEditedResponse","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c1e6bd17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fake_icon.d696a61e.png\";","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n  headers: { \"Content-Type\": \"application/json; charset=UTF-8\" },\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"./config\";\r\n\r\nconst UserService = {\r\n  getAllUser: async () => {\r\n    try {\r\n      const { data } = await axios.get(\"users\");\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getUser: async (userId) => {\r\n    try {\r\n      const { data } = await axios.get(`users/${userId}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default UserService;\r\n","export const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\r\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\r\n\r\nexport const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAILURE = \"FETCH_USER_FAILURE\";\r\n","import UserService from \"../../services/UserService\";\r\nimport {\r\n  FETCH_USERS_FAILURE,\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n} from \"./userActionTypes\";\r\n\r\nconst fetchUsersRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchUsersSuccess = (data) => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst fetchUsersFailure = (error) => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nconst fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USER_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchUserSuccess = (data) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst fetchUserFailure = (error) => {\r\n  return {\r\n    type: FETCH_USER_SUCCESS,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchUser = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchUserRequest());\r\n    try {\r\n      const data = await UserService.getUser(userId);\r\n      dispatch(fetchUserSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchUserFailure(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchUsersRequest());\r\n    try {\r\n      const data = await UserService.getAllUser();\r\n      dispatch(fetchUsersSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchUsersFailure(error.message));\r\n    }\r\n  };\r\n};\r\n","export const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\r\nexport const FETCH_POSTS_FAILURE = \"FETCH_POSTS_FAILURE\";\r\n\r\nexport const FETCH_POST_REQUEST = \"FETCH_POST_REQUEST\";\r\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\r\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\r\n\r\nexport const FETCH_POSTS_BY_USER_ID_REQUEST = \"FETCH_POSTS_BY_USER_ID_REQUEST\";\r\nexport const FETCH_POSTS_BY_USER_ID_SUCCESS = \"FETCH_POSTS_BY_USER_ID_SUCCESS\";\r\nexport const FETCH_POSTS_BY_USER_ID_FAILURE = \"FETCH_POSTS_BY_USER_ID_FAILURE\";\r\n\r\nexport const FETCH_POST_USERS_REQUEST = \"FETCH_POST_USERS_REQUEST\";\r\nexport const FETCH_POST_USERS_SUCCESS = \"FETCH_POST_USERS_SUCCESS\";\r\nexport const FETCH_POST_USERS_FAILURE = \"FETCH_POST_USERS_FAILURE\";\r\n\r\nexport const CREATE_POST_REQUEST = \"CREATE_POST_REQUEST\";\r\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\r\nexport const CREATE_POST_FAILURE = \"CREATE_POST_FAILURE\";\r\n\r\nexport const UPDATE_POST_REQUEST = \"UPDATE_POST_REQUEST\";\r\nexport const UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\";\r\nexport const UPDATE_POST_FAILURE = \"UPDATE_POST_FAILURE\";\r\n\r\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_FAILURE = \"DELETE_POST_FAILURE\";\r\n","import {\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POST_FAILURE,\r\n  FETCH_POST_REQUEST,\r\n  FETCH_POST_SUCCESS,\r\n  FETCH_POSTS_BY_USER_ID_REQUEST,\r\n  FETCH_POSTS_BY_USER_ID_SUCCESS,\r\n  FETCH_POSTS_BY_USER_ID_FAILURE,\r\n  FETCH_POST_USERS_REQUEST,\r\n  FETCH_POST_USERS_SUCCESS,\r\n  FETCH_POST_USERS_FAILURE,\r\n} from \"./postActionTypes\";\r\n\r\n// fetch posts\r\nexport const fetchPostsRequest = () => {\r\n  return { type: FETCH_POSTS_REQUEST };\r\n};\r\n\r\nexport const fetchPostsSuccess = (data) => {\r\n  return { type: FETCH_POSTS_SUCCESS, payload: data };\r\n};\r\n\r\nexport const fetchPostsFailure = (error) => {\r\n  return { type: FETCH_POSTS_FAILURE, error: error };\r\n};\r\n\r\n// fetch post\r\nexport const fetchPostRequest = () => {\r\n  return {\r\n    type: FETCH_POST_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchPostSuccess = (data) => {\r\n  return {\r\n    type: FETCH_POST_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchPostFailure = (error) => {\r\n  return {\r\n    type: FETCH_POST_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\n// fetch posts by user id\r\n\r\nexport const fetchPostsByUserIdRequest = () => {\r\n  return {\r\n    type: FETCH_POSTS_BY_USER_ID_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchPostsByUserIdSuccess = (data) => {\r\n  return {\r\n    type: FETCH_POSTS_BY_USER_ID_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchPostsByUserIdFfailure = (error) => {\r\n  return {\r\n    type: FETCH_POSTS_BY_USER_ID_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\n// fetch users for post creation\r\n\r\nexport const fetchPostUsersRequest = () => {\r\n  return {\r\n    type: FETCH_POST_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchPostUsersSuccess = (data) => {\r\n  return {\r\n    type: FETCH_POST_USERS_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchPostUsersFailure = (error) => {\r\n  return {\r\n    type: FETCH_POST_USERS_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n","import {\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAILURE,\r\n} from \"./postActionTypes\";\r\n\r\n// create post\r\n\r\nexport const createPostRequest = () => {\r\n  return {\r\n    type: CREATE_POST_REQUEST,\r\n  };\r\n};\r\n\r\nexport const createPostSuccess = (data) => {\r\n  return {\r\n    type: CREATE_POST_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const createPostFailure = (error) => {\r\n  return {\r\n    type: CREATE_POST_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n","import {\r\n  UPDATE_POST_FAILURE,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n} from \"./postActionTypes\";\r\n\r\nexport const updatePostRequest = () => {\r\n  return {\r\n    type: UPDATE_POST_REQUEST,\r\n  };\r\n};\r\n\r\nexport const updatePostSuccess = (data) => {\r\n  return {\r\n    type: UPDATE_POST_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const updatePostFailure = (error) => {\r\n  return {\r\n    type: UPDATE_POST_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n","import axios from \"./config\";\r\nimport UserService from \"./UserService\";\r\n\r\nconst PostService = {\r\n  getAllPost: async () => {\r\n    try {\r\n      const { data } = await axios.get(\"posts\");\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getAllPostByQuery: async (query) => {\r\n    try {\r\n      const { data } = await axios.get(`posts${query}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getPost: async (postId) => {\r\n    try {\r\n      const { data } = await axios.get(`posts/${postId}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getUsers: async () => {\r\n    try {\r\n      const data = await UserService.getAllUser();\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createPost: async (postData) => {\r\n    try {\r\n      const { data } = await axios.post(\"posts\", JSON.stringify(postData));\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  updatePost: async (postId, postData) => {\r\n    try {\r\n      const { data } = await axios.put(\r\n        `posts/${postId}`,\r\n        JSON.stringify(postData)\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  deletePost: async (postId) => {\r\n    try {\r\n      await axios.delete(`posts/${postId}`); // response data don't have any value\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default PostService;\r\n","import {\r\n  fetchPostsByUserIdRequest,\r\n  fetchPostsByUserIdSuccess,\r\n  fetchPostsByUserIdFfailure,\r\n  fetchPostRequest,\r\n  fetchPostSuccess,\r\n  fetchPostFailure,\r\n  fetchPostsRequest,\r\n  fetchPostsSuccess,\r\n  fetchPostsFailure,\r\n  fetchPostUsersRequest,\r\n  fetchPostUsersSuccess,\r\n  fetchPostUsersFailure,\r\n} from \"./postFetchActions\";\r\n\r\nimport {\r\n  createPostFailure,\r\n  createPostRequest,\r\n  createPostSuccess,\r\n} from \"./postCreateActions\";\r\nimport {\r\n  updatePostRequest,\r\n  updatePostSuccess,\r\n  updatePostFailure,\r\n} from \"./postEditActions\";\r\n\r\nimport {\r\n  deletePostFailure,\r\n  deletePostRequest,\r\n  deletePostSuccess,\r\n} from \"./postDeleteActions\";\r\nimport PostService from \"../../services/PostService\";\r\n\r\nexport const fetchPostsByUserId = (query) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostsByUserIdRequest(query));\r\n    try {\r\n      const data =\r\n        query !== \"\"\r\n          ? await PostService.getAllPostByQuery(query)\r\n          : await PostService.getAllPost();\r\n\r\n      dispatch(fetchPostsByUserIdSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchPostsByUserIdFfailure(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPost = (postId) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostRequest());\r\n    try {\r\n      const data = await PostService.getPost(postId);\r\n      dispatch(fetchPostSuccess(data));\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchPostFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostsRequest());\r\n    try {\r\n      const data = await PostService.getAllPost();\r\n      dispatch(fetchPostsSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchPostsFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPostUsers = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchPostUsersRequest());\r\n    try {\r\n      const data = await PostService.getUsers();\r\n      dispatch(fetchPostUsersSuccess(data));\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchPostUsersFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPost = (postData) => {\r\n  return async (dispatch) => {\r\n    dispatch(createPostRequest());\r\n    try {\r\n      const data = await PostService.createPost(postData);\r\n      dispatch(createPostSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(createPostFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updatePost = (postId, postData) => {\r\n  return async (dispatch) => {\r\n    dispatch(updatePostRequest());\r\n    try {\r\n      const data = await PostService.updatePost(postId, postData);\r\n      dispatch(updatePostSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updatePostFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n  return async (dispatch) => {\r\n    dispatch(deletePostRequest());\r\n    try {\r\n      await PostService.deletePost(postId); // response data don't have any value\r\n      dispatch(deletePostSuccess());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(deletePostFailure(error));\r\n    }\r\n  };\r\n};\r\n","import axios from \"./config\";\r\nconst CommentService = {\r\n  getCommentsByPostId: async (postId) => {\r\n    try {\r\n      const { data } = await axios.get(`/comments?postId=${postId}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default CommentService;\r\n","export const FETCH_COMMENTS_BY_POST_ID_REQUEST =\r\n  \"FETCH_COMMENTS_BY_POST_ID_REQUEST\";\r\nexport const FETCH_COMMENTS_BY_POST_ID_SUCCESS =\r\n  \"FETCH_COMMENTS_BY_POST_ID_SUCCESS\";\r\nexport const FETCH_COMMENTS_BY_POST_ID_FAILURE =\r\n  \"FETCH_COMMENTS_BY_POST_ID_FAILURE\";\r\n","import CommentService from \"../../services/CommentService\";\r\nimport {\r\n  FETCH_COMMENTS_BY_POST_ID_REQUEST,\r\n  FETCH_COMMENTS_BY_POST_ID_SUCCESS,\r\n  FETCH_COMMENTS_BY_POST_ID_FAILURE,\r\n} from \"./commentActionTypes\";\r\n\r\nconst fetchCommentsByPostIdRequest = () => {\r\n  return {\r\n    type: FETCH_COMMENTS_BY_POST_ID_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchCommentsByPostIdSuccess = (data) => {\r\n  return {\r\n    type: FETCH_COMMENTS_BY_POST_ID_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst fetchCommentsByPostIdFailure = (error) => {\r\n  return {\r\n    type: FETCH_COMMENTS_BY_POST_ID_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchCommentsByPostId = (postId) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchCommentsByPostIdRequest());\r\n    try {\r\n      const data = await CommentService.getCommentsByPostId(postId);\r\n      dispatch(fetchCommentsByPostIdSuccess(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(fetchCommentsByPostIdFailure(error));\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div\r\n        className=\"spinner-grow text-info\"\r\n        role=\"status\"\r\n        style={{ height: \"300px\", width: \"300px\" }}\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LinkButton = ({\r\n  path,\r\n  btnClasses = \"btn btn-sm btn-primary\",\r\n  text = \"Back\",\r\n  iconClass = \"\",\r\n}) => {\r\n  return (\r\n    <NavLink className={btnClasses} to={path}>\r\n      {iconClass !== \"\" ? <i className={iconClass}>{text}</i> : text}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import { React, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchUser } from \"../../redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport LinkButton from \"../../components/LinkButton\";\r\n\r\nconst View = () => {\r\n  const { userId } = useParams();\r\n  const state = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUser(userId));\r\n  }, [dispatch, userId]);\r\n\r\n  return (\r\n    <div className=\"card m-5\">\r\n      <div className=\"card-header\">User Details</div>\r\n      <div className=\"card-body\">\r\n        {state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"col-md-8\">\r\n            <h5 className=\"card-title\">{state.user?.name}</h5>\r\n            <address>\r\n              <i className=\"fas fa-envelope-square\"></i> {state.user?.email}{\" \"}\r\n              <br />\r\n              <i className=\"fas fa-phone\"></i> {state.user?.phone} <br />\r\n              <i className=\"fas fa-map-marker-alt\"></i>{\" \"}\r\n              {state.user?.address?.suite},{state.user?.address?.street},{\" \"}\r\n              {state.user?.address?.city} <br />\r\n              <i className=\"fas fa-globe\"></i> {state.user?.website} <br />\r\n              <i className=\"far fa-building\"></i> {state.user?.company?.name}\r\n            </address>\r\n            <LinkButton path=\"/users\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import * as yup from \"yup\";\r\n\r\nconst PostSchemaUtils = yup.object().shape({\r\n  title: yup.string().required(\"Please enter title\"),\r\n  body: yup.string().required(\"Please enter body\"),\r\n  userId: yup.object().shape({\r\n    label: yup.string(),\r\n    value: yup.string().required(\"Please select a user\"),\r\n  }),\r\n});\r\n\r\nexport default PostSchemaUtils;\r\n","const MessageTypeUtils = {\r\n  SUCCESS: \"Success\",\r\n  FAILED: \"Failed\",\r\n};\r\n\r\nexport default MessageTypeUtils;\r\n","import React from \"react\";\r\nimport MessageType from \"../uitils/MessageTypeUtils\";\r\n\r\nconst AlertMessage = ({ message, messageType }) => {\r\n  const alertClassTypes =\r\n    messageType === MessageType.SUCCESS ? \" alert-success\" : \" alert-danger\";\r\n  const alertClasses = `alert ${alertClassTypes} alert-dismissible fade show`;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={alertClasses}>\r\n        <strong>{messageType}!</strong> {message}.\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;\r\n","import { React, useEffect } from \"react\";\r\nimport LinkButton from \"../../components/LinkButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPost, updatePost, fetchPost, fetchPostUsers } from \"../../redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport postSchema from \"../../uitils/PostSchemaUtils\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Select from \"react-select\";\r\nimport MessageTypeUtils from \"../../uitils/MessageTypeUtils\";\r\nimport AlertMessage from \"../../components/AlertMessage\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AddEditPost = () => {\r\n  const postState = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const { postId } = useParams();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    formState: { isSubmitSuccessful, errors },\r\n  } = useForm({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPostUsers());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      if (postId !== undefined) {\r\n        const [postData, users] = await Promise.all([\r\n          fetchPost(postId)(dispatch),\r\n          fetchPostUsers()(dispatch),\r\n        ]);\r\n        const selectedUserOption = users.filter(\r\n          (user) => user.id === postData?.userId\r\n        );\r\n\r\n        const option = selectedUserOption.map((user) => ({\r\n          label: user.name,\r\n          value: user.id,\r\n        }));\r\n\r\n        const data = {\r\n          ...postData,\r\n          userId: option,\r\n        };\r\n        reset(data);\r\n      }\r\n    };\r\n    getPost();\r\n  }, [postId, reset, dispatch]);\r\n\r\n  const options = postState?.users?.map((user) => {\r\n    return { label: user.name, value: user.id };\r\n  });\r\n  options?.unshift({ label: \"Select a user\", value: \"\" });\r\n\r\n  const handleOnSubmit = (data, e) => {\r\n    const postData = {\r\n      ...data,\r\n      userId: data.userId.value,\r\n    };\r\n    if (postId) dispatch(updatePost(postId, postData));\r\n    else {\r\n      dispatch(createPost(postData));\r\n      reset();\r\n    }\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card m-5\">\r\n      <div className=\"card-header\">{postId ? \"Edit Post\" : \"Create Post\"}</div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            {postState?.loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <>\r\n                {isSubmitSuccessful && (\r\n                  <AlertMessage\r\n                    message={\r\n                      postId && postState?.error === \"\"\r\n                        ? \"Post updated successfully\"\r\n                        : postState?.error === \"\" && \"Post created successfully\"\r\n                    }\r\n                    messageType={\r\n                      postState?.error === \"\"\r\n                        ? MessageTypeUtils.SUCCESS\r\n                        : MessageTypeUtils.FAILED\r\n                    }\r\n                  />\r\n                )}\r\n                <form onSubmit={handleSubmit(handleOnSubmit)}>\r\n                  <div className=\"form-floating mb-3 row\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"post title\"\r\n                      {...register(\"title\")}\r\n                    />\r\n                    <label>Title</label>\r\n                    {errors.title && (\r\n                      <div className=\"text-danger\">{errors.title.message}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-floating mb-3 row\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      placeholder=\"body\"\r\n                      style={{ height: \"100px\" }}\r\n                      {...register(\"body\")}\r\n                    />\r\n                    <label>Body</label>\r\n                    {errors.body && (\r\n                      <div className=\"text-danger\">{errors.body.message}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <div className=\"col-md-8\">\r\n                      <Controller\r\n                        name=\"userId\"\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                          <Select {...field} options={options} />\r\n                        )}\r\n                      />\r\n                      {errors.userId?.value && (\r\n                        <div className=\"text-danger\">\r\n                          {errors.userId.value.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-floating mb-3 row\"></div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                      <LinkButton\r\n                        path=\"/posts\"\r\n                        btnClasses=\"btn btn-md btn-primary\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <button type=\"submit\" className=\"btn btn-secondary\">\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditPost;\r\n","import React from \"react\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"shadow p-3 mb-5 bg-body rounded text-center m-5\">\r\n        <h1 className=\"display-1\">Fake Blog</h1>\r\n        <p className=\"lead\">\r\n          This is a fake blog powered by{\" \"}\r\n          <a\r\n            rel=\"noreferrer\"\r\n            href=\"https://jsonplaceholder.typicode.com/\"\r\n            target=\"_blank\"\r\n          >\r\n            JSON placeholder\r\n          </a>\r\n        </p>\r\n        <p className=\"lead\">\r\n          <strong>Important Note from JSON placeholder</strong>: resource will\r\n          not be really updated on the server but it will be faked as if.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","class DataTableInstance {\r\n  static VIEW_ACTION = \"VIEW\";\r\n  static EDIT_ACTION = \"EDIT\";\r\n  static DELETE_ACTION = \"DELETE\";\r\n  showActionColumn = false;\r\n  headers = [];\r\n  data = {\r\n    entityKeys: [],\r\n    entities: [],\r\n  };\r\n  actions = [\r\n    {\r\n      actionHandaler: (func) => func(),\r\n      actionClasses: \"\",\r\n      actionType: this.VIEW_ACTION,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default DataTableInstance;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className=\"input-group rounded\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"form-control rounded\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n        aria-describedby=\"search-addon\"\r\n        onChange={props.handleSearch}\r\n      />\r\n      <span className=\"input-group-text border-0\" id=\"search-addon\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DataTableInstance from \"../uitils/DataTableUtils\";\r\n\r\nconst DataTable = ({ table }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <div className=\"scrollbar\">\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            {table.headers.map((header, index) => (\r\n              <th key={index}>{header}</th>\r\n            ))}\r\n            {table.showActionColumn ? <th>Action</th> : \"\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {table.data?.entities?.map((eachData) => (\r\n            <tr key={eachData?.id}>\r\n              {table.data?.entityKeys?.map((property, index) => (\r\n                <td key={index}>{eachData[property]}</td>\r\n              ))}\r\n              <td>\r\n                {table.actions.map((action, index) => {\r\n                  return action.actionType ===\r\n                    DataTableInstance.DELETE_ACTION ? (\r\n                    <button\r\n                      className=\"btn-border-less\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#targetModal\"\r\n                      key={index}\r\n                    >\r\n                      <i\r\n                        table-data={eachData.id}\r\n                        onClick={action.actionHandaler}\r\n                        className={action.actionClasses}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </button>\r\n                  ) : (\r\n                    <NavLink\r\n                      to={\r\n                        action.actionType === DataTableInstance.VIEW_ACTION\r\n                          ? `${location.pathname}/${eachData.id}`\r\n                          : `${location.pathname}/${eachData.id}/edit`\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <i\r\n                        className={action.actionClasses}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n\r\nDataTable.propTypes = {\r\n  table: PropTypes.instanceOf(DataTableInstance).isRequired,\r\n};\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { fetchUsers } from \"../../redux\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport DataTableInstance from \"../../uitils/DataTableUtils\";\r\nimport Search from \"../../components/SearchBox\";\r\nimport DataTable from \"../../components/DataTable\";\r\n\r\nconst Index = () => {\r\n  const state = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const table = new DataTableInstance();\r\n  table.headers = [\"Id\", \"Name\", \"Email\", \"Phone Number\"];\r\n  table.showActionColumn = true;\r\n  table.data.entityKeys = [\"id\", \"name\", \"email\", \"phone\"];\r\n  table.actions = [];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleSearch = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  table.data.entities = state?.users?.filter((user) => {\r\n    return user.name.toLowerCase().includes(query.toLowerCase());\r\n  });\r\n\r\n  table.actions.push({\r\n    actionClasses: \"fa fa-eye\",\r\n    actionType: DataTableInstance.VIEW_ACTION,\r\n  });\r\n\r\n  return (\r\n    <div className=\"card m-5\">\r\n      <div className=\"card-header\">Total user: {state?.users?.length}</div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Search handleSearch={handleSearch} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-5\">\r\n            {state?.loading ? <Loader /> : <DataTable table={table} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import { React } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst LiveSearchDropDown = ({ options, selectedValue, onChange }) => {\r\n  return (\r\n    <Select\r\n      value={options?.filter((option) => option.value === selectedValue)}\r\n      options={options}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\nexport default LiveSearchDropDown;\r\n","import React from \"react\";\r\n\r\nconst ConfirmModal = ({\r\n  message,\r\n  modalTitle,\r\n  leftButtonText,\r\n  rightButtonText,\r\n  confirmCallBackFun,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"targetModal\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              {modalTitle}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>{message}</p>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-bs-dismiss=\"modal\"\r\n            >\r\n              {leftButtonText}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={confirmCallBackFun}\r\n            >\r\n              {rightButtonText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deletePost,\r\n  fetchPosts,\r\n  fetchPostsByUserId,\r\n  fetchPostUsers,\r\n} from \"../../redux\";\r\nimport DataTable from \"../../components/DataTable\";\r\nimport Search from \"../../components/SearchBox\";\r\nimport Loader from \"../../components/Loader\";\r\nimport DataTableInstance from \"../../uitils/DataTableUtils\";\r\nimport LiveSearchDropDown from \"../../components/LiveSearchDropDown\";\r\nimport LinkButton from \"../../components/LinkButton\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\n\r\nconst PostPage = () => {\r\n  const postState = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selecteUserId, setSelecteUserId] = useState(0);\r\n  const [filterByUserQuery, setFilterByUserQuery] = useState(\"\");\r\n  const [deletedPostId, setDeletedPostId] = useState(0);\r\n\r\n  const table = new DataTableInstance();\r\n  table.headers = [\"Id\", \"UserId\", \"Title\", \"Body\"];\r\n  table.showActionColumn = true;\r\n  table.data.entityKeys = [\"id\", \"userId\", \"title\", \"body\"];\r\n  table.actions = [];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n    dispatch(fetchPostUsers());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPostsByUserId(filterByUserQuery));\r\n  }, [filterByUserQuery, dispatch]);\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleFilterByUserPost = (obj) => {\r\n    const userId = obj.value;\r\n    const query = userId === 0 ? \"\" : `?userId=${userId}`;\r\n    setSelecteUserId(userId);\r\n    setFilterByUserQuery(query);\r\n  };\r\n\r\n  table.data.entities = postState?.posts?.filter((post) => {\r\n    return post.title.toLowerCase().includes(searchQuery.toLowerCase());\r\n  });\r\n\r\n  const onDeleteButtonPress = (e) => {\r\n    const postId = e.target.attributes[\"table-data\"].value;\r\n    setDeletedPostId(postId);\r\n  };\r\n\r\n  table.actions.push(\r\n    {\r\n      actionClasses: \"fa fa-eye\",\r\n      actionType: DataTableInstance.VIEW_ACTION,\r\n    },\r\n    {\r\n      actionClasses: \"fas fa-edit\",\r\n      actionType: DataTableInstance.EDIT_ACTION,\r\n    },\r\n    {\r\n      actionClasses: \"fas fa-trash-alt\",\r\n      actionType: DataTableInstance.DELETE_ACTION,\r\n      actionHandaler: onDeleteButtonPress,\r\n    }\r\n  );\r\n\r\n  const options = postState?.users?.map((user) => {\r\n    return { label: user.name, value: user.id };\r\n  });\r\n  options?.unshift({ label: \"Select a user\", value: 0 });\r\n\r\n  const onConfirmDelete = () => {\r\n    dispatch(deletePost(deletedPostId));\r\n  };\r\n  return (\r\n    <div className=\"card m-5\">\r\n      <div className=\"card-header\">Total Posts: {postState?.posts?.length}</div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Search handleSearch={handleSearch} />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <LiveSearchDropDown\r\n              options={options}\r\n              onChange={handleFilterByUserPost}\r\n              selectedValue={selecteUserId}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <LinkButton\r\n              path=\"/posts/add\"\r\n              btnClasses=\"btn btn-md btn-success\"\r\n              text=\"Add\"\r\n              iconClass=\"fas fa-plus\"\r\n            ></LinkButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-5\">\r\n            <ConfirmModal\r\n              message=\"Are you sure want to delete ?\"\r\n              modalTitle={`Delete Post Id: ${deletedPostId}`}\r\n              leftButtonText=\"No\"\r\n              rightButtonText=\"Yes\"\r\n              confirmCallBackFun={onConfirmDelete}\r\n            />\r\n            {postState?.loading ? <Loader /> : <DataTable table={table} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import {\r\n  DELETE_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n} from \"./postActionTypes\";\r\n\r\nexport const deletePostRequest = () => {\r\n  return {\r\n    type: DELETE_POST_REQUEST,\r\n  };\r\n};\r\n\r\nexport const deletePostSuccess = () => {\r\n  return {\r\n    type: DELETE_POST_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const deletePostFailure = (error) => {\r\n  return {\r\n    type: DELETE_POST_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n","import { React, useEffect } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCommentsByPostId } from \"../../redux\";\r\n\r\nconst Index = ({ postId }) => {\r\n  const state = useSelector((state) => state.comment);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCommentsByPostId(postId));\r\n  }, [dispatch, postId]);\r\n  return (\r\n    <>\r\n      {state.loading ? (\r\n        <Loader />\r\n      ) : (\r\n        state?.commentsByPostId.map((comment) => (\r\n          <div className=\"card m-2\" key={comment?.id}>\r\n            <h5 className=\"card-title p-2\">{comment?.name}</h5>\r\n            <h6 className=\"card-subtitle p-2\">{comment?.email}</h6>\r\n            <div className=\"card-body\">{comment?.body}</div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchPost } from \"../../redux\";\r\nimport LinkButton from \"../../components/LinkButton\";\r\nimport Comment from \"../../parts/Comment/Index\";\r\n\r\nconst View = () => {\r\n  const state = useSelector((state) => state.post);\r\n  const [showComment, setShowComment] = useState(false);\r\n  const [showButtonText, setShowButtonText] = useState(\"Show comment\");\r\n  const dispatch = useDispatch();\r\n  const { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPost(postId));\r\n  }, [dispatch, postId]);\r\n\r\n  const toggleComment = (e) => {\r\n    e.preventDefault();\r\n    setShowComment(!showComment);\r\n    if (showComment) setShowButtonText(\"Show comment\");\r\n    else setShowButtonText(\"Hide comment\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card m-5\">\r\n      <div className=\"card-header\">Post Details</div>\r\n      <div className=\"card-body\">\r\n        {state?.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <h5 className=\"card-title\">{state?.post?.title}</h5>\r\n            <p className=\"card-text\">{state?.post?.body}</p>\r\n            <LinkButton path=\"/posts\" />\r\n            <button className=\"btn btn-sm btn-info m-2\" onClick={toggleComment}>\r\n              {showButtonText}\r\n            </button>\r\n            {showComment === true && <Comment postId={postId} />}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React from \"react\";\r\nimport fake_icon from \"../../assets/fake_icon.png\";\r\nimport { Route, Switch, NavLink } from \"react-router-dom\";\r\nimport ViewUser from \"../../pages/User/View\";\r\nimport AddEditPost from \"../../pages/Post/AddEditPost\";\r\nimport HomePage from \"../../pages/Home/HomePage\";\r\nimport UserPage from \"../../pages/User/Index\";\r\nimport PostPage from \"../../pages/Post/Index\";\r\nimport ViewPost from \"../../pages/Post/View\";\r\nconst index = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            src={fake_icon}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"fake_icon\"\r\n          />\r\n          Fake Blog\r\n        </NavLink>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                to=\"/users\"\r\n                activeClassName=\"active\"\r\n              >\r\n                Users\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                to=\"/posts\"\r\n                activeClassName=\"active\"\r\n              >\r\n                Posts\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* below is the routing */}\r\n\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path=\"/users\">\r\n            <UserPage />\r\n          </Route>\r\n          <Route exact path=\"/posts\">\r\n            <PostPage />\r\n          </Route>\r\n\r\n          <Route exact path=\"/users/:userId\" children={<ViewUser />} />\r\n          <Route exact path=\"/posts/add\" children={<AddEditPost />} />\r\n          <Route exact path=\"/posts/:postId\" children={<ViewPost />} />\r\n          <Route exact path=\"/posts/:postId/edit\" children={<AddEditPost />} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport fake_icon from \"../../assets/fake_icon.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer-section\">\r\n      <div className=\"container\">\r\n        <div className=\"footer-cta pt-5 pb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4 col-md-4 mb-30\">\r\n              <div className=\"single-cta\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                <div className=\"cta-text\">\r\n                  <h4>Find us</h4>\r\n                  <span>Wasa Raod, Maniknagor Dhaka-1203</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-4 col-md-4 mb-30\">\r\n              <div className=\"single-cta\">\r\n                <i className=\"fas fa-phone\"></i>\r\n                <div className=\"cta-text\">\r\n                  <h4>Call us</h4>\r\n                  <span>9876543210 0</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-4 col-md-4 mb-30\">\r\n              <div className=\"single-cta\">\r\n                <i className=\"far fa-envelope-open\"></i>\r\n                <div className=\"subscribe-form\">\r\n                  <h4>Mail us</h4>\r\n                  <span>mail@info.com</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-content pt-5 pb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4 col-lg-4 mb-50\">\r\n              <div className=\"footer-widget\">\r\n                <div className=\"footer-logo\">\r\n                  <img src={fake_icon} className=\"img-fluid\" alt=\"logo\" />\r\n                </div>\r\n                <div className=\"footer-text\">\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet, consec tetur adipisicing elit,\r\n                    sed do eiusmod tempor incididuntut consec tetur adipisicing\r\n                    elit,Lorem ipsum dolor sit amet.\r\n                  </p>\r\n                </div>\r\n                <div className=\"footer-social-icon\">\r\n                  <span>Follow us</span>\r\n                  <a\r\n                    href=\"https://www.facebook.com/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <i className=\"fab fa-facebook-f facebook-bg\"></i>\r\n                  </a>\r\n                  <a\r\n                    href=\"https://twitter.com/login?lang=en\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <i className=\"fab fa-twitter twitter-bg\"></i>\r\n                  </a>\r\n                  <a\r\n                    href=\"https://www.google.com/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <i className=\"fab fa-google-plus-g google-bg\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-4 col-lg-4 col-md-6 mb-30\">\r\n              <div className=\"footer-widget\">\r\n                <div className=\"footer-widget-heading\">\r\n                  <h3>Useful Links</h3>\r\n                </div>\r\n                <ul>\r\n                  <li>\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <NavLink to=\"/users\">Users</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <NavLink to=\"/posts\">Posts</NavLink>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"copyright-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-6 col-lg-6 text-center text-lg-left\">\r\n              <div className=\"copyright-text\">\r\n                <p>Copyright &copy; 2021, All Right Reserved </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport Header from \"./parts/Header/Header\";\nimport Footer from \"./parts/Footer/Footer\";\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_USERS_FAILURE,\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n} from \"./userActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: action.payload,\r\n      };\r\n    case FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        users: [],\r\n      };\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_POST_FAILURE,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n  FETCH_POSTS_BY_USER_ID_FAILURE,\r\n  FETCH_POSTS_BY_USER_ID_REQUEST,\r\n  FETCH_POSTS_BY_USER_ID_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POST_FAILURE,\r\n  FETCH_POST_REQUEST,\r\n  FETCH_POST_SUCCESS,\r\n  FETCH_POST_USERS_FAILURE,\r\n  FETCH_POST_USERS_REQUEST,\r\n  FETCH_POST_USERS_SUCCESS,\r\n} from \"./postActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  posts: [],\r\n  error: \"\",\r\n  post: {},\r\n  users: [],\r\n  postCreatedResponse: {},\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // fetch posts\r\n    case FETCH_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload,\r\n      };\r\n    case FETCH_POSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        posts: [],\r\n      };\r\n    // fetch post\r\n    case FETCH_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        post: action.payload,\r\n        posts: [],\r\n        postCreatedResponse: {},\r\n      };\r\n    case FETCH_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        post: [],\r\n      };\r\n    // fetch posts by userId\r\n    case FETCH_POSTS_BY_USER_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_POSTS_BY_USER_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload,\r\n      };\r\n    case FETCH_POSTS_BY_USER_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        posts: [],\r\n      };\r\n    // fetch post users\r\n    case FETCH_POST_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_POST_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n    case FETCH_POST_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        users: [],\r\n      };\r\n\r\n    // create post\r\n    case CREATE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case CREATE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postCreatedResponse: action.payload,\r\n      };\r\n    case CREATE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        postCreatedResponse: {},\r\n      };\r\n\r\n    // edit post\r\n    case UPDATE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        postCreatedResponse: {},\r\n        posts: [],\r\n      };\r\n\r\n    case UPDATE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postEditedResponse: action.payload,\r\n      };\r\n    case UPDATE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    // delete post\r\n\r\n    case DELETE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        postCreatedResponse: {},\r\n        post: {},\r\n      };\r\n    case DELETE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_COMMENTS_BY_POST_ID_FAILURE,\r\n  FETCH_COMMENTS_BY_POST_ID_REQUEST,\r\n  FETCH_COMMENTS_BY_POST_ID_SUCCESS,\r\n} from \"./commentActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  commentsByPostId: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const commentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COMMENTS_BY_POST_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_COMMENTS_BY_POST_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        commentsByPostId: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_COMMENTS_BY_POST_ID_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { userReducer } from \"./user/userReducer\";\r\nimport { postReducer } from \"./post/postReducer\";\r\nimport { commentReducer } from \"./comment/commentReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  post: postReducer,\r\n  user: userReducer,\r\n  comment: commentReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}